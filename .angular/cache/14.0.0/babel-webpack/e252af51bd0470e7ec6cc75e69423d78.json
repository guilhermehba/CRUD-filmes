{"ast":null,"code":"import { AbstractControl, FormGroup } from '@angular/forms';\nimport { ValidarCamposService } from '../validar-campos.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../validar-campos.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/forms\";\n\nfunction InputTextComponent_mat_error_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Campo obrigat\\u00F3rio\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction InputTextComponent_mat_error_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Campo precisa ter no m\\u00EDnimo \", ctx_r1.validacao.lengthValidar(ctx_r1.formControl, \"minlength\"), \" caracteres \");\n  }\n}\n\nfunction InputTextComponent_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Campo pode ter no m\\u00E1ximo \", ctx_r2.validacao.lengthValidar(ctx_r2.formControl, \"maxlength\"), \" caracteres \");\n  }\n}\n\nexport let InputTextComponent = /*#__PURE__*/(() => {\n  class InputTextComponent {\n    constructor(validacao) {\n      this.validacao = validacao;\n    }\n\n    get formControl() {\n      return this.formGroup.controls[this.controlName];\n    }\n\n  }\n\n  InputTextComponent.ɵfac = function InputTextComponent_Factory(t) {\n    return new (t || InputTextComponent)(i0.ɵɵdirectiveInject(i1.ValidarCamposService));\n  };\n\n  InputTextComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InputTextComponent,\n    selectors: [[\"dio-input-text\"]],\n    inputs: {\n      titulo: \"titulo\",\n      formGroup: \"formGroup\",\n      controlName: \"controlName\"\n    },\n    decls: 6,\n    vars: 7,\n    consts: [[3, \"formGroup\"], [1, \"full-width\"], [\"matInput\", \"\", 3, \"placeholder\", \"name\", \"formControlName\"], [4, \"ngIf\"]],\n    template: function InputTextComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-form-field\", 1);\n        i0.ɵɵelement(2, \"input\", 2);\n        i0.ɵɵtemplate(3, InputTextComponent_mat_error_3_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵtemplate(4, InputTextComponent_mat_error_4_Template, 2, 1, \"mat-error\", 3);\n        i0.ɵɵtemplate(5, InputTextComponent_mat_error_5_Template, 2, 1, \"mat-error\", 3);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"placeholder\", ctx.titulo)(\"name\", ctx.controlName)(\"formControlName\", ctx.controlName);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.validacao.hasErrorValidar(ctx.formControl, \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.validacao.hasErrorValidar(ctx.formControl, \"minlength\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.validacao.hasErrorValidar(ctx.formControl, \"maxlength\"));\n      }\n    },\n    dependencies: [i2.NgIf, i3.MatError, i3.MatFormField, i4.MatInput, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName]\n  });\n  return InputTextComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}